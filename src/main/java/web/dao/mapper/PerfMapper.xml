<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.dao.face.PerfDao">

<!-- <resultMap type="web.dto.Perf" id="PerfList">
	<id column="PERFUME_NO" property="perfumeNo" />
	<result column="BRAND_NO" property="brandNo" />
	<result column="FILE_NO" property="fileNo" />
	<result column="PERFUME_NAME" property="perfumeName" />
	<result column="PERFUME_VITALITY" property="perfumeVitality" />
	<result column="PERFUME_GENDER" property="perfumeGender" />
		
	<association javaType="web.dto.FileUpload" property="fileUpload">
		<id column="FILE_NO" property="fileNo"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="STORED_NAME" property="storedName"/>
		<result column="FILE_SIZE" property="fileSize"/>
	</association>
</resultMap> -->

<!-- <resultMap type="web.dto.Perf" id="PerfList">
	<id column="PERFUME_NO" property="perfumeNo" />
	<result column="BRAND_NO" property="brandNo" />
	<result column="FILE_NO" property="fileNo" />
	<result column="PERFUME_NAME" property="perfumeName" />
	<result column="PERFUME_VITALITY" property="perfumeVitality" />
	<result column="PERFUME_GENDER" property="perfumeGender" />
	<result column="ORIGIN_NAME" property="originName"/>
	<result column="STORED_NAME" property="storedName"/>
	<result column="FILE_SIZE" property="fileSize"/>	
</resultMap> -->



<select id="selectCntPerfAll" resultType="int" parameterType="web.util.PagingPerf">
	SELECT COUNT(*) FROM (
		SELECT DISTINCT P.* FROM tb_perf P
			LEFT OUTER JOIN tb_file F ON P.FILE_NO = F.FILE_NO
			LEFT OUTER JOIN tb_brand B ON P.BRAND_NO = B.BRAND_NO
			LEFT OUTER JOIN tb_perf_note N ON P.perfume_no = N.perfume_no
		
			
		<trim prefix="WHERE" prefixOverrides="AND">
		<if test='search != null and !search.equals("")'>
			AND PERFUME_NAME LIKE '%' || #{search } || '%'
		</if>
		<if test="gender != 0">
			AND PERFUME_GENDER = #{gender }
		</if>
		<if test="note != null and !note.equals('')">
			AND NOTE_NO IN
			<foreach collection="note" item="note" open="(" close=")" separator=", ">
				#{note }
			</foreach>
		</if>
		<if test="vitality != null and !vitality.equals('')">
			AND PERFUME_VITALITY = #{vitality }
		</if>
		</trim>
		)
</select>


<!-- <select id="selectPerfAll" resultType="web.dto.Perf" parameterType="web.util.Paging">
	SELECT * FROM (
		SELECT rownum rnum, F.* FROM (
			SELECT
				PERFUME_NO, BRAND_NO, FILE_NO
				, PERFUME_NAME, PERFUME_VITALITY, PERFUME_GENDER
			FROM TB_PERF
			ORDER BY PERFUME_NO ASC
		) F
	) BOARD
	WHERE rnum BETWEEN #{startNo } AND #{endNo }
</select> -->

<select id="selectPerfAll" resultType="hashmap" parameterType="web.util.PagingPerf">
    SELECT * FROM (
		SELECT rownum rnum, L.* FROM (
			SELECT DISTINCT
			    P.PERFUME_NO, P.BRAND_NO, P.FILE_NO
			    , P.PERFUME_NAME, P.PERFUME_VITALITY, P.PERFUME_GENDER
			    , F.ORIGIN_NAME, F.STORED_NAME
			    , B.BRAND_NAME
			FROM	tb_perf P
			LEFT OUTER JOIN tb_file F ON P.FILE_NO = F.FILE_NO
			LEFT OUTER JOIN tb_brand B ON P.BRAND_NO = B.BRAND_NO
			LEFT OUTER JOIN tb_perf_note N ON P.perfume_no = N.perfume_no

			
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test='search != null and !search.equals("")'>
					AND PERFUME_NAME LIKE '%' || #{search } || '%'
				</if>
				<if test="gender != 0">
					AND PERFUME_GENDER = #{gender }
				</if>
				<if test="note != null and !note.equals('')">
					AND NOTE_NO IN
					<foreach collection="note" item="note" open="(" close=")" separator=", ">
						#{note }
					</foreach>
				</if>
				<if test="vitality != null and !vitality.equals('')">
					AND PERFUME_VITALITY = #{vitality }
				</if>
			</trim>
        
			ORDER BY P.PERFUME_NO ASC
		) L
	) PerfList
	WHERE rnum BETWEEN #{startNo } AND #{endNo }
</select>



<select id="selectPerfByFilter">
</select>

<select id="selectListByKeyword">
</select>

<select id="selectPerfByPerfNo" resultType="hashmap" parameterType="web.dto.Perf">
	SELECT P.PERFUME_NO, P.PERFUME_NAME, P.PERFUME_VITALITY, P.PERFUME_GENDER
        , F.ORIGIN_NAME, F.STORED_NAME
        , B.BRAND_NAME 
        FROM tb_perf P
		LEFT OUTER JOIN tb_file F ON P.FILE_NO = F.FILE_NO
		LEFT OUTER JOIN tb_brand B ON P.BRAND_NO = B.BRAND_NO
	WHERE P.perfume_no = #{perfumeNo }

</select>

<select id="selectMainAccordByPerfNo" resultType="hashmap" parameterType="web.dto.Perf">
	SELECT * FROM (
		SELECT DENSE_RANK() OVER(ORDER BY CASE WHEN cnt IS NULL THEN 1 ELSE 0 END, cnt DESC) ranking, NR.* FROM (
			SELECT MA.note_no, MA.cnt, N.note_name FROM (
				SELECT note_no, count(note_like_no) cnt FROM(
	            	SELECT p.note_no, nl.note_like_no FROM tb_perf_note P
	                	LEFT OUTER JOIN tb_note_like NL ON p.perfume_no = nl.perfume_no AND p.note_no = nl.note_no
	            	WHERE p.perfume_no = #{perfumeNo } )
	            GROUP BY note_no
	            ORDER BY cnt DESC) MA
			LEFT OUTER JOIN tb_note N ON MA.note_no = N.note_no) NR
			)
	WHERE ranking = 1
</select>

<select id="selectPerfLikeByPerfNo" resultType="hashmap" parameterType="int">
	SELECT count(*) cnt FROM tb_perf_like
	WHERE perfume_islike = 1 AND perfume_no = #{perfNo }
</select>

<select id="selectPerfDislikeByPerfNo" resultType="hashmap" parameterType="int">
	SELECT count(*) cnt FROM tb_perf_like
	WHERE perfume_islike = 0 AND perfume_no = #{perfNo }
</select>


<select id="selectTopNoteByPerfNo" resultType="hashmap" parameterType="web.dto.Perf">
	SELECT 
    	N.*, cnt.cnt
    	FROM tb_note N
		LEFT OUTER JOIN tb_perf_note PN ON N.NOTE_NO = PN.NOTE_NO
		LEFT OUTER JOIN (
					SELECT n.note_no, count(*) cnt FROM tb_perf P
    					LEFT OUTER JOIN tb_perf_note PN ON p.perfume_no = pn.perfume_no
    					LEFT OUTER JOIN tb_note N ON pn.note_no = n.note_no
    					JOIN tb_note_like NL ON n.note_no = nl.note_no
    				WHERE n.note_type = 'top' AND p.perfume_no = #{perfumeNo }
    				GROUP BY n.note_no) CNT ON n.note_no = cnt.note_no
	WHERE N.NOTE_TYPE = 'top' AND PN.PERFUME_NO = #{perfumeNo }
</select>

<select id="selectMiddleNoteByPerfNo" resultType="hashmap" parameterType="web.dto.Perf">
	SELECT 
   		N.*, cnt.cnt
    	FROM tb_note N
		LEFT OUTER JOIN tb_perf_note PN ON N.NOTE_NO = PN.NOTE_NO
		LEFT OUTER JOIN (
					SELECT n.note_no, count(*) cnt FROM tb_perf P
    					LEFT OUTER JOIN tb_perf_note PN ON p.perfume_no = pn.perfume_no
    					LEFT OUTER JOIN tb_note N ON pn.note_no = n.note_no
    					JOIN tb_note_like NL ON n.note_no = nl.note_no
    				WHERE n.note_type = 'middle' AND p.perfume_no = #{perfumeNo }
    				GROUP BY n.note_no) CNT ON n.note_no = cnt.note_no
	WHERE N.NOTE_TYPE = 'middle' AND PN.PERFUME_NO = #{perfumeNo }
</select>

<select id="selectBaseNoteByPerfNo" resultType="hashmap" parameterType="web.dto.Perf">
	SELECT 
	    N.*, cnt.cnt
	    FROM tb_note N
		LEFT OUTER JOIN tb_perf_note PN ON N.NOTE_NO = PN.NOTE_NO
		LEFT OUTER JOIN (
					SELECT n.note_no, count(*) cnt FROM tb_perf P
    					LEFT OUTER JOIN tb_perf_note PN ON p.perfume_no = pn.perfume_no
    					LEFT OUTER JOIN tb_note N ON pn.note_no = n.note_no
    					JOIN tb_note_like NL ON n.note_no = nl.note_no
    				WHERE n.note_type = 'base' AND p.perfume_no = #{perfumeNo }
    				GROUP BY n.note_no) CNT ON n.note_no = cnt.note_no
	WHERE N.NOTE_TYPE = 'base' AND PN.PERFUME_NO = #{perfumeNo }
</select>


<select id="selectPerfLikeCntByPerNoUserNo" resultType="int" parameterType="hashmap">
	SELECT count(*) FROM tb_perf_like
	WHERE perfume_no = #{perfNo } AND user_no = #{userNo } AND perfume_islike = 1
</select>


<select id="selectPerfDislikeCntByPerNoUserNo" resultType="int" parameterType="hashmap">
	SELECT count(*) FROM tb_perf_like
	WHERE perfume_no = #{perfNo } AND user_no = #{userNo } AND perfume_islike = 0
</select>

<insert id="insertPerfLike" parameterType="web.dto.PerfLike">
	INSERT INTO tb_perf_like (PERFUME_LIKE_NO, PERFUME_NO, USER_NO, PERFUME_ISLIKE)
		VALUES (TB_PERF_LIKE_SEQ.nextval, #{perfumeNo }, #{userNo }, 1)
</insert>

<insert id="insertPerfDislike" parameterType="web.dto.PerfLike">
	INSERT INTO tb_perf_like (PERFUME_LIKE_NO, PERFUME_NO, USER_NO, PERFUME_ISLIKE)
		VALUES (TB_PERF_LIKE_SEQ.nextval, #{perfumeNo }, #{userNo }, 0)
</insert>

<delete id="deletePerfLike" parameterType="web.dto.PerfLike">
	DELETE FROM tb_perf_like
		WHERE PERFUME_NO = #{perfumeNo } AND USER_NO = #{userNo }
</delete>

<delete id="deleteNoteLike" parameterType="web.dto.NoteLike">
	DELETE FROM tb_note_like
		WHERE PERFUME_NO = #{perfumeNo } AND USER_NO = #{userNo }
</delete>

<insert id="insertNoteLike" parameterType="hashmap">
	INSERT INTO tb_note_like (NOTE_LIKE_NO, USER_NO, PERFUME_NO, NOTE_NO)
		VALUES (TB_NOTE_LIKE_SEQ.nextval, #{userNo }, #{perfumeNo }, #{noteNo } )
</insert>

<update id="updatePerfLike">

</update>

<update id="updatePerfDislike">
</update>

<update id="updatePerf">
</update>

<delete id="deletePerf">
</delete>

<insert id="insertPerf">
</insert>

</mapper>