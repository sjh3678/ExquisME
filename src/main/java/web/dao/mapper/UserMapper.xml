<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.dao.face.UserDao">
	
	<resultMap type="web.dto.User" id="User">
		<id column="user_no" property="userNo"/>
		<result column="file_no" property="fileNo"/>
		<result column="id" property="id"/>
		<result column="pw" property="pw"/>
		<result column="nick" property="nick"/>
		<result column="phone" property="phone"/>
		<result column="birth" property="birth"/>
		<result column="gender" property="gender"/>
		<result column="is_admin" property="isAdmin"/>
		<result column="is_social" property="isSocial"/>
		<result column="create_date" property="createDate"/>
		<result column="question_anwser" property="questionAnwser"/>
		<result column="question_no" property="questionNo"/>
	</resultMap>
	
	<resultMap type="web.dto.FileUpload" id="File">
		<id column="file_no" property="fileNo"/>
		<result column="origin_name" property="originName"/>
		<result column="stored_name" property="storedName"/>
		<result column="file_size" property="fileSize"/>
	</resultMap>
	
	<resultMap type="web.dto.Report" id="Report">
		<id column="report_no" property="reportNo"/>
		<result column="ex_post_no" property="exPostNo"/>
		<result column="reporter" property="reporter"/>
		<result column="defendant" property="defendant"/>
		<result column="report_content" property="reportContent"/>
		<result column="report_date" property="reportDate"/>
		<result column="is_execute" property="isExecute"/>
		<result column="ban_date" property="banDate"/>
		<result column="expire_date" property="expireDate"/>
		<result column="ban_type" property="banType"/> 
		<result column="reason" property="reason"/>
	</resultMap>
	
	<resultMap type="web.dto.Extagram" id="Extagram">
		<id column="ex_no" property="exNo"/>
		<result column="file_no" property="fileNo"/>
		<result column="user_no" property="userNo"/>
		<result column="ex_content" property="exContent"/>
		<result column="ex_date" property="exDate"/>
		<result column="ex_views" property="exViews"/>
	</resultMap>
		
	<select id="selectUserCnt" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_user
		WHERE 1=1
		<if test='id != null and !id.equals("")'>
			AND id = #{id}
		</if>
			
		<if test='email != null and !email.equals("")'>
			AND email = #{email}
		</if>
			
		<if test='nick != null and !nick.equals("")'>
			AND nick = #{nick}
		</if>
			
		<if test='userNo != 0'>
			AND user_no = #{userNo}
		</if>

	</select>
	
	<select id="selectUserById" parameterType="web.dto.User" resultMap="User">
		SELECT 
			user_no, file_no, id, pw, nick, email, phone, birth, gender, create_date, is_admin
		FROM tb_user
		WHERE id = #{id}
	</select>
	
	<select id="selectFileByFileNo" parameterType="int" resultMap="File">
		SELECT 
			file_no, origin_name, stored_name, file_size
		FROM tb_file
		WHERE file_no = #{fileNo}
	</select>
	
	<select id="selectUserByUserno" parameterType="int" resultMap="User">
		SELECT 
			user_no, file_no, id, pw, nick, email, phone, birth, gender, create_date,
			is_admin, is_social
		FROM tb_user
		WHERE user_no = #{userNo}
	</select>
	
	<insert id="insertUserJoin" parameterType="web.dto.User">
		INSERT INTO tb_user (user_no, file_no, id, pw, nick, email, phone, birth, gender, question_no, question_anwser)
		VALUES (tb_user_seq.nextval, 91, #{id}, #{pw}, #{nick}, #{email}, #{phone}, #{birth}, #{gender}, #{questionNo}, #{questionAnwser})
	</insert>
	
	<update id="updatePw" parameterType="web.dto.User">
		UPDATE tb_user SET pw = #{pw}
		WHERE user_no = #{userNo}
	</update>
	
	<delete id="deleteUserByUserNo" parameterType="int">
		DELETE tb_user
		WHERE user_no = #{userNo}
	</delete>	

	<insert id="insertFile" parameterType="web.dto.FileUpload">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
		SELECT tb_file_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO tb_file (file_no, origin_name, stored_name, file_size)
		VALUES (#{fileNo}, #{originName}, #{storedName}, #{fileSize})
	</insert>
  	
	<delete id="deleteFileByFileNo" parameterType="int">
		DELETE tb_file
		WHERE file_no = #{fileNo}
	</delete>
	
	<select id="selectFileCntByFileNo" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_file
		WHERE file_no = #{fileNo}
	</select>

	<update id="updateUserInfo" parameterType="web.dto.User">
		UPDATE tb_user SET
			<if test="fileNo != null"> 
			file_no = #{fileNo},
			</if>
			email = #{email}, nick = #{nick}, phone = #{phone}, gender = #{gender}, birth = #{birth}
		WHERE user_no = #{userNo}
	</update>
	<select id="selectCntByEmail" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_user
		WHERE email = #{email}
	</select>
	
	<select id="selectCntByEmail2" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_user
		WHERE id = #{email}
	</select>
	
	<select id="selectUserByEmail" parameterType="web.dto.User" resultMap="User">
		SELECT
			user_no, id, nick, email, question_no, question_anwser 
		FROM tb_user
		WHERE email = #{email}
	</select>
	
	<select id="selectExtaCntByUserNo" resultType="int" parameterType="hashmap">
		SELECT 
   			count(*) 
		FROM tb_extagram e, tb_user u
		WHERE e.user_no = u.user_no
		AND e.user_no = #{user.userNo}
	</select>
	
	<select id="selectExtaHistoryByUserNo" resultType="hashmap" parameterType="hashmap">
		SELECT * FROM(
			SELECT rownum rnum, R.* FROM(
				SELECT
    				 e.ex_no, fx.stored_name upFile, e.user_no POSTOWNER, u.nick,
   					 e.ex_content, e.ex_date, e.ex_views, fu.stored_name Profile
   					 , u.user_no YOU
				FROM tb_extagram e, tb_user u, tb_file fx, tb_file fu
				WHERE e.user_no = u.user_no AND fx.file_no = e.file_no
				AND u.file_no = fu.file_no AND e.user_no = #{user.userNo}
				ORDER BY e.ex_no DESC
			) R
		)T
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
	
	<select id="selectCommCntByUserNo" resultType="int" parameterType="hashmap">
		SELECT 
   			count(*) 
		FROM tb_ex_comm c, tb_user u
		WHERE c.user_no = u.user_no
			AND c.user_no = #{user.userNo}
	</select>
	
	<select id="selectCommHistoryByUserNo" resultType="hashmap" parameterType="hashmap">
		SELECT * FROM(
    		SELECT rownum rnum, R.* FROM(
        		SELECT
            		c.ex_comm_no, c.user_no, c.ex_post_no, c.ex_comm,
            		c.ex_comm_date, u.nick, fu.stored_name profile, pu.nick POSTOWNER
            		, fp.stored_name POSTPROFILE
        		FROM tb_ex_comm c, tb_extagram e, tb_user u,  tb_file fu, tb_user pu, tb_file fp
        		WHERE e.ex_no = c.ex_post_no AND u.file_no = fu.file_no 
         		   	AND pu.user_no = e.user_no AND pu.file_no = fp.file_no
            		AND u.user_no = #{user.userNo} AND c.user_no = #{user.userNo}
        		ORDER BY ex_comm DESC
    		) R
		)T
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
	
	<select id="selectLayerCntByUserNo" parameterType="hashmap" resultType="int">
		SELECT 
			count(*) 
		FROM tb_layer l, tb_user u
		WHERE l.user_no = u.user_no 
			AND l.user_no = #{user.userNo}
	</select>
	
	<select id="selectLayerHistoryByUserNo" parameterType="hashmap" resultType="hashMap">
		SELECT * FROM(
			SELECT rownum rnum, R.* FROM(
				SELECT 
    				layering_no, l.user_no, perfume1_per, layering_content, 
    				layering_date, f1.stored_name perfume1, f2.stored_name perfume2
				FROM tb_layer l, tb_user u, tb_perf p1, tb_perf p2, tb_file f1, tb_file f2
				WHERE  l.perfume_no1 = p1.perfume_no AND l.perfume_no2 = p2.perfume_no 
    				AND p1.file_no = f1.file_no AND p2.file_no = f2.file_no
    				AND l.user_no = u.user_no AND l.user_no = #{user.userNo}
    			ORDER BY layering_no DESC
    		) R
		) T
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
	
	<select id="selectCntUserAll" resultType="int" parameterType="web.util.PagingUser">
		SELECT count(*) cnt FROM (
			SELECT * FROM tb_user
			<if test='search != null and !search.equals("")'>
				WHERE id LIKE '%' || #{search } || '%'
				OR nick LIKE '%' || #{search } || '%'
			</if>
				)
	</select>
	
	<select id="selectUserAll" resultType="hashmap" parameterType="web.util.PagingUser">
		SELECT f.stored_name, u.user_no, u.id, u.nick, u.email, u.phone, u.gender, u.is_admin FROM tb_user U
			LEFT OUTER JOIN tb_file F
   			ON u.file_no = f.file_no
			<if test='search != null and !search.equals("")'>
				WHERE id LIKE '%' || #{search } || '%'
				OR nick LIKE '%' || #{search } || '%'
			</if>
	</select>
	
	<delete id="deleteCommByUserNo" parameterType="web.dto.Extagram">
		DELETE tb_ex_comm
		WHERE ex_post_no = #{exNo} OR user_no = #{userNo}
	</delete>
	
	<delete id="deleteExtaByUserNo" parameterType="int">
		DELETE tb_extagram
		WHERE user_no = #{userNo}
	</delete>
	
	<delete id="deleteExtaLikeUserNo" parameterType="web.dto.Extagram">
		DELETE tb_ex_like
		WHERE ex_post_no = #{exNo} OR user_no = #{userNo}
	</delete>
	
	<delete id="deleteLayerLikeByUserNo" parameterType="web.dto.Layer">
		DELETE tb_layer_like
		WHERE user_no = #{userNo} OR layering_no = #{layeringNo}
	</delete>

	<delete id="deleteLayerByUserNo" parameterType="int">
		DELETE tb_layer
		WHERE user_no = #{userNo} 
	</delete>
	
	<delete id="deleteNoteLikeByUserNo" parameterType="int">
		DELETE tb_note_like
		WHERE user_no = #{userNo}
	</delete>
		
	<delete id="deleteFaqByUserNo" parameterType="int">
		DELETE tb_faq
		WHERE user_no = #{userNo}
	</delete>
	
	<delete id="deleteNoticeByUserNo" parameterType="int">
		DELETE tb_notice
		WHERE user_no = #{userNo}
	</delete>
	
	<delete id="deletePerfLikeByUserNo" parameterType="int">
		DELETE tb_perf_like
		WHERE user_no = #{userNO}
	</delete>
	
	<!-- 피고자의 유저번호로 조회 -->
	<select id="selectReportCntByUserNo" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_report
		WHERE defendant = #{userNo}
	</select>
	
	<!-- 피고자의 유저번호로 조회 -->
	<select id="selectReportByUserNo" parameterType="web.dto.User" resultMap="Report">
		SELECT 
			report_no, ex_post_no, reporter, defendant, report_content, 
			report_date, is_execute, ban_type, reason, expire_date
		FROM tb_report
		WHERE defendant = #{userNo}
		ORDER BY expire_date DESC
	</select>
	
	<select id="selectExtaListByUserNo" parameterType="int" resultMap="Extagram">
		SELECT 
			ex_no, e.file_no, e.user_no
		FROM tb_extagram e, tb_user u
		WHERE e.user_no = u.user_no AND e.user_no = #{userNo}
	</select>
	
	<select id="selectLayerListByUserNo" parameterType="int" resultType="web.dto.Layer">
		SELECT layering_no, perfume_no1, perfume_no2, l.user_no
		FROM tb_layer l, tb_user u
		WHERE l.user_no = u.user_no AND l.user_no = #{userNo}
	</select>
	
	<select id="selectLayerCntByUserNo2" parameterType="int" resultType="int">
		SELECT count(*) FROM tb_layer
		WHERE user_no = #{userNo}
	</select>
	
	<select id="selectExtaCntByUserNo2" parameterType="int" resultType="int">
		SELECT count(*) FROM tb_extagram
		WHERE user_no = #{userNo}
	</select>
	<select id="selectUserList" resultMap="User">
		SELECT user_no, id. pw, nick, email FROM tb_user
		ORDER BY user_no
	</select>
</mapper>