<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.dao.face.UserDao">
	
	<resultMap type="web.dto.User" id="User">
		<id column="user_no" property="userNo"/>
		<result column="file_no" property="fileNo"/>
		<result column="id" property="id"/>
		<result column="pw" property="pw"/>
		<result column="nick" property="nick"/>
		<result column="phone" property="phone"/>
		<result column="birth" property="birth"/>
		<result column="gender" property="gender"/>
		<result column="is_admin" property="isAdmin"/>
		<result column="is_social" property="isSocial"/>
		<result column="create_date" property="createDate"/>
		<result column="question_anwser" property="questionAnwser"/>
		<result column="question_no" property="questionNo"/>
	</resultMap>
	
	<resultMap type="web.dto.FileUpload" id="File">
		<id column="file_no" property="fileNo"/>
		<result column="origin_name" property="originName"/>
		<result column="stored_name" property="storedName"/>
		<result column="file_size" property="fileSize"/>
	</resultMap>
	
	<select id="selectUserCnt" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_user
		<choose>
			<when test="id != null">
				WHERE id = #{id}
			</when>
			
			<when test="email != null">
				WHERE email = #{email}
			</when>
			
			<when test="nick != null">
				WHERE nick = #{nick}
			</when>
		</choose> 
		
	</select>
	
	<select id="selectUserById" parameterType="web.dto.User" resultMap="User">
		SELECT 
			user_no, file_no, id, pw, nick, email, phone, birth, gender, create_date, is_admin
		FROM tb_user
		WHERE id = #{id}
	</select>

	<insert id="insertUserJoin" parameterType="web.dto.User">
		INSERT INTO tb_user (user_no, file_no, id, pw, nick, email, phone, birth, gender, question_no, question_anwser)
		VALUES (tb_user_seq.nextval, 91, #{id}, #{pw}, #{nick}, #{email}, #{phone}, #{birth}, #{gender}, #{questionNo}, #{questionAnwser})
	</insert>
	
	<select id="selectFileByFileNo" parameterType="int" resultMap="File">
		SELECT 
			file_no, origin_name, stored_name, file_size
		FROM tb_file
		WHERE file_no = #{fileNo}
	</select>
	
	<select id="selectUserByUserno" parameterType="int" resultMap="User">
		SELECT 
			user_no, file_no, id, pw, nick, email, phone, birth, gender, create_date,
			is_admin, is_social
		FROM tb_user
		WHERE user_no = #{userNo}
	</select>
	
	<update id="updatePw" parameterType="web.dto.User">
		UPDATE tb_user SET pw = #{pw}
		WHERE user_no = #{userNo}
	</update>
	
	<delete id="deleteUserByUserno" parameterType="int">
		DELETE tb_user
		WHERE user_no = #{userNo}
	</delete>	

	<insert id="insertFile" parameterType="web.dto.FileUpload">
		<selectKey order="BEFORE" resultType="int" keyProperty="fileNo">
		SELECT tb_file_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO tb_file (file_no, origin_name, stored_name, file_size)
		VALUES (#{fileNo}, #{originName}, #{storedName}, #{fileSize})
	</insert>
  	
	<delete id="deleteFileByFileNo" parameterType="web.dto.User">
		DELETE tb_file
		WHERE file_no = #{fileNo}
	</delete>
	
	<select id="selectFileCntByFileNo" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_file
		WHERE file_no = #{fileNo}
	</select>

	<update id="updateUserInfo" parameterType="web.dto.User">
		UPDATE tb_user SET
			<if test="fileNo != null"> 
			file_no = #{fileNo},
			</if>
			email = #{email}, nick = #{nick}, phone = #{phone}, birth = #{birth}
		WHERE user_no = #{userNo}
	</update>
	<select id="selectCntByEmail" parameterType="web.dto.User" resultType="int">
		SELECT count(*) FROM tb_user
		WHERE email = #{email}
	</select>
	
	<select id="selectUserByEmail" parameterType="web.dto.User" resultMap="User">
		SELECT
			user_no, id, nick, email, question_no, question_anwser 
		FROM tb_user
		WHERE email = #{email}
	</select>
	<select id="selectExtaCntByUserNo" resultType="int" parameterType="hashmap">
		SELECT 
   			count(*) 
		FROM tb_extagram e, tb_user u
		WHERE e.user_no = u.user_no
		AND e.user_no = #{user.userNo}
	</select>
	<select id="selectExtaHistoryByUserNo" resultType="hashmap" parameterType="hashmap">
		SELECT * FROM(
			SELECT rownum rnum, R.* FROM(
				SELECT
    				 e.ex_no, fx.stored_name upFile, e.user_no, u.nick,
   					 e.ex_content, e.ex_date, e.ex_views, fu.stored_name Profile
				FROM tb_extagram e, tb_user u, tb_file fx, tb_file fu
				WHERE e.user_no = u.user_no AND fx.file_no = e.file_no
				AND u.file_no = fu.file_no AND e.user_no = #{user.userNo}
			) R
		)T
		WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
	</select>
</mapper>